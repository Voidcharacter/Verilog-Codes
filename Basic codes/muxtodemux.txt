method muxtodemux(y,i,a,b,c,d);
input [15:0]i,a,b,c,d;
output [15:0]y;
wire o,[15:0]l;
assign l[0]=~a&~b&~c&~d&i[0];
assign l[1]=a&~b&~c&~d&i[1];
assign l[2]=~a&b&~c&~d&i[2];
assign l[3]=a&b&~c&~d&i[3];
assign l[4]=~a&~b&c&~d&i[4];
assign l[5]=a&~b&c&~d&i[5];
assign l[6]=~a&b&c&~d&i[6];
assign l[7]=a&b&c&~d&i[7];
assign l[8]=~a&~b&~c&d&i[8];
assign l[9]=a&~b&~c&d&i[9];
assign l[10]=~a&b&~c&d&i[10];
assign l[11]=a&b&~c&d&i[11];
assign l[12]=~a&~b&c&d&i[12];
assign l[13]=a&~b&c&d&i[13];
assign l[14]=~a&b&c&d&i[14];
assign l[15]=a&b&c&d&i[15];
assign o=l[0]|i[1]|l[2]|l[3]|l[4]|l[5]|l[6]|l[7]|l[8]|l[9]|l[10]|l[11]|l[12]|l[13]|l[14]|l[15];
assign y[0]=(c&d)&~(b^c)&~d&~(a|~c)&o;
assign y[1]=~(c&d)&~(b^c)&~d&~(a|~c)&o;
assign y[2]=(c&d)&(b^c)&~d&~(a|~c)&o;
assign y[3]=~(c&d)&(b^c)&~d&~(a|~c)&o;
assign y[4]=(c&d)&~(b^c)&d&~(a|~c)&o;
assign y[5]=~(c&d)&~(b^c)&d&~(a|~c)&o;
assign y[6]=(c&d)&(b^c)&d&~(a|~c)&o;
assign y[7]=~(c&d)&(b^c)&d&~(a|~c)&o;
assign y[8]=(c&d)&~(b^c)&~d&(a|~c)&o;
assign y[9]=~(c&d)&~(b^c)&~d&(a|~c)&o;
assign y[10]=(c&d)&(b^c)&~d&(a|~c)&o;
assign y[11]=~(c&d)&(b^c)&~d&(a|~c)&o;
assign y[12]=(c&d)&~(b^c)&d&(a|~c)&o;
assign y[13]=~(c&d)&~(b^c)&d&(a|~c)&o;
assign y[14]=(c&d)&(b^c)&d&(a|~c)&o;
assign y[15]=~(c&d)&(b^c)&d&(a|~c)&o;
endmodule


